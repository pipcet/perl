=encoding utf8

=head1 NAME

perl5253delta - what is new for perl v5.25.3

=head1 DESCRIPTION

This document describes differences between the 5.25.2 release and the 5.25.3
release.

If you are upgrading from an earlier release such as 5.25.1, first read
L<perl5252delta>, which describes differences between 5.25.1 and 5.25.2.

=head1 Core Enhancements

=head2 Unicode 9.0 is now supported

A list of changes is at L<http://www.unicode.org/versions/Unicode9.0.0/>.
Modules that are shipped with core Perl but not maintained by p5p do not
necessarily support Unicode 9.0.  L<Unicode::Normalize> does work on 9.0.

=head2 Use of C<\p{I<script>}> uses the improved Script_Extensions property

Unicode 6.0 introduced an improved form of the Script (C<sc>) property, and
called it Script_Extensions (C<scx>).  As of now, Perl uses this improved
version when a property is specified as just C<\p{I<script>}>.  The meaning of
compound forms, like C<\p{sc=I<script>}> are unchanged.  This should make
programs be more accurate when determining if a character is used in a given
script, but there is a slight chance of breakage for programs that very
specifically needed the old behavior.  See L<perlunicode/Scripts>.

=head2 Declaring a reference to a variable

As an experimental feature, Perl now allows the referencing operator to come
after L<C<my()>|perlfunc/my>, L<C<state()>|perlfunc/state>,
L<C<our()>|perlfunc/our>, or L<C<local()>|perlfunc/local>.  This syntax must
be enabled with C<use feature 'declared_refs'>.  It is experimental, and will
warn by default unless C<no warnings 'experimental::refaliasing'> is in effect.
It is intended mainly for use in assignments to references.  For example:

    use experimental 'refaliasing', 'declared_refs';
    my \$a = \$b;

See L<perlref/Assigning to References> for slightly more detail.

=head1 Incompatible Changes

=head2 C<${^ENCODING}> has been removed

Consequently, the L<encoding> pragma's default mode is no longer supported.  If
you still need to write your source code in encodings other than UTF-8, use a
source filter such as L<Filter::Encoding> on CPAN or L<encoding>'s C<Filter>
option.

=head2 C<scalar(%hash)> return signature changed

The value returned for C<scalar(%hash)> will no longer show information about
the buckets allocated in the hash.  It will simply return the count of used
keys.  It is thus equivalent to C<0+keys(%hash)>.

A form of backwards compatibility is provided via C<Hash::Util::bucket_ratio()>
which provides the same behavior as C<scalar(%hash)> provided prior to Perl
5.25.

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<bignum> has been upgraded from version 0.42 to 0.43.

=item *

L<Data::Dumper> has been upgraded from version 2.160 to 2.161.

=item *

L<Devel::PPPort> has been upgraded from version 3.32 to 3.35.

=item *

L<Encode> has been upgraded from version 2.80 to 2.84.

=item *

L<encoding> has been upgraded from version 2.17 to 2.17_01.

This module's default mode is no longer supported as of Perl 5.25.3.  It now
dies when imported, unless the C<Filter> option is being used.

=item *

L<encoding::warnings> has been upgraded from version 0.12 to 0.13.

This module is no longer supported as of Perl 5.25.3.  It emits a warning to
that effect and then does nothing.

=item *

L<ExtUtils::ParseXS> has been upgraded from version 3.32 to 3.33.

=item *

L<ExtUtils::Typemaps> has been upgraded from version 3.32 to 3.33.

=item *

L<feature> has been upgraded from version 1.44 to 1.45.

=item *

L<Hash::Util> has been upgraded from version 0.19 to 0.20.

=item *

L<Math::BigInt> has been upgraded from version 1.999715 to 1.999726.

=item *

L<Math::BigInt::FastCalc> has been upgraded from version 0.40 to 0.42.

=item *

L<Math::BigRat> has been upgraded from version 0.260802 to 0.260804.

=item *

L<Module::CoreList> has been upgraded from version 5.20160620 to 5.20160720.

=item *

L<Parse::CPAN::Meta> has been upgraded from version 1.4417 to 1.4422.

=item *

L<Perl::OSType> has been upgraded from version 1.009 to 1.010.

=item *

L<Test::Simple> has been upgraded from version 1.302026 to 1.302045.

=item *

L<Time::HiRes> has been upgraded from version 1.9734 to 1.9739.

=item *

L<Unicode::UCD> has been upgraded from version 0.65 to 0.66.

=item *

L<version> has been upgraded from version 0.9916 to 0.9917.

=item *

L<warnings> has been upgraded from version 1.36 to 1.37.

=item *

L<XSLoader> has been upgraded from version 0.21 to 0.22, fixing a security hole
in which binary files could be loaded from a path outside of
L<C<@INC>|perlvar/@INC>.

=back

=head1 Documentation

=head2 Changes to Existing Documentation

=head3 L<perldata> and L<perltie>

=over 4

=item *

Updated documentation of C<scalar(%hash)>.  See L</scalar(%hash) return
signature changed> above.

=back

=head3 L<perlexperiment> and L<perlref>

=over 4

=item *

Documented new feature: See L</Declaring a reference to a variable> above.

=back

=head3 L<perlfunc>

=over 4

=item *

Clarified documentation of L<C<seek()>|perlfunc/seek>,
L<C<tell()>|perlfunc/tell> and L<C<sysseek()>|perlfunc/sysseek>.
L<[perl #128607]|https://rt.perl.org/Public/Bug/Display.html?id=128607>

=item *

Removed obsolete documentation of L<C<study()>|perlfunc/study>.

=back

=head3 L<perlunicode>

=over 4

=item *

Documented change to C<\p{I<script>}> to now use the improved Script_Extensions
property.  See L</Use of \p{script} uses the improved Script_Extensions
property> above.

=item *

Updated the text to correspond with changes in Unicode UTS#18, concerning
regular expressions, and Perl compatibility with what it says.

=back

=head3 L<perlvar>

=over 4

=item *

Removed obsolete documentation of C<${^ENCODING}>.  See L</${^ENCODING} has
been removed> above.

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

=head2 New Diagnostics

=head3 New Errors

=over 4

=item *

L<The experimental declared_refs feature is not enabled|perldiag/"The experimental declared_refs feature is not enabled">

(F) To declare references to variables, as in C<my \%x>, you must first enable
the feature:

    no warnings "experimental::declared_refs";
    use feature "declared_refs";

=back

=head3 New Warnings

=over 4

=item *

L<Declaring references is experimental|perldiag/"Declaring references is experimental">

(S experimental::declared_refs) This warning is emitted if you use a reference
constructor on the right-hand side of C<my()>, C<state()>, C<our()>, or
C<local()>.  Simply suppress the warning if you want to use the feature, but
know that in doing so you are taking the risk of using an experimental feature
which may change or be removed in a future Perl version:

    no warnings "experimental::declared_refs";
    use feature "declared_refs";
    $fooref = my \$foo;

=item *

L<C<${^ENCODING}> is no longer supported|perldiag/"${^ENCODING} is no longer supported">

(D deprecated) The special variable C<${^ENCODING}>, formerly used to implement
the C<encoding> pragma, is no longer supported as of Perl 5.26.0.

=back

=head1 Configuration and Compilation

=over 4

=item *

F<Configure> now aborts if both "-Duselongdouble" and "-Dusequadmath" are
requested.
L<[perl #126203]|https://rt.perl.org/Public/Bug/Display.html?id=126203>

=item *

Fixed a bug in which F<Configure> could append "-quadmath" to the archname even
if it was already present.
L<[perl #128538]|https://rt.perl.org/Public/Bug/Display.html?id=128538>

=item *

Clang builds with "-DPERL_GLOBAL_STRUCT" or "-DPERL_GLOBAL_STRUCT_PRIVATE" have
been fixed (by disabling Thread Safety Analysis for these configurations).

=back

=head1 Testing

=over 4

=item *

A new test script, F<t/op/decl-refs.t>, has been added to test the new feature,
"Declaring a reference to a variable".

=item *

A new test script, F<t/re/anyof.t>, has been added to test that the ANYOF nodes
generated by bracketed character classes are as expected.

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

=item VAX

VAX floating point formats are now supported.

=back

=head1 Selected Bug Fixes

=over 4

=item *

An assertion failure with C<%: = 0> has been fixed.
L<[perl #128238]|https://rt.perl.org/Public/Bug/Display.html?id=128238>

=item *

In Perl 5.18, the parsing of C<"$foo::$bar"> was accidentally changed, such
that it would be treated as C<$foo."::".$bar>.  The previous behavior, which
was to parse it as C<$foo:: . $bar>, has been restored.
L<[perl #128478]|https://rt.perl.org/Public/Bug/Display.html?id=128478>

=item *

Since Perl 5.20, line numbers have been off by one when perl is invoked with
the B<-x> switch.  This has been fixed.
L<[perl #128508]|https://rt.perl.org/Public/Bug/Display.html?id=128508>

=item *

Vivifying a subroutine stub in a deleted stash (e.g., C<delete $My::{"Foo::"};
\&My::Foo::foo>) no longer crashes.  It had begun crashing in Perl 5.18.
L<[perl #128532]|https://rt.perl.org/Public/Bug/Display.html?id=128532>

=item *

Some obscure cases of subroutines and file handles being freed at the same time
could result in crashes, but have been fixed.  The crash was introduced in Perl
5.22.
L<[perl #128597]|https://rt.perl.org/Public/Bug/Display.html?id=128597>

=item *

Code that looks for a variable name associated with an uninitialized value
could cause an assertion in cases where magic is involved, such as
C<$ISA[0][0]>.  This has now been fixed.
L<[perl #128253]|https://rt.perl.org/Public/Bug/Display.html?id=128253>

=item *

A crash caused by code generating the warning "Subroutine STASH::NAME
redefined" in cases such as C<sub P::f{} undef *P::; *P::f =sub{};> has been
fixed.  In these cases, where the STASH is missing, the warning will now appear
as "Subroutine NAME redefined".
L<[perl #128257]|https://rt.perl.org/Public/Bug/Display.html?id=128257>

=item *

Fixed an assertion triggered by some code that handles deprecated behavior in
formats, e.g. in cases like this:

    format STDOUT =
    @
    0"$x"

L<[perl #128255]|https://rt.perl.org/Public/Bug/Display.html?id=128255>

=item *

A possible divide by zero in string transformation code on Windows has been
avoided, fixing a crash when collating an empty string.
L<[perl #128618]|https://rt.perl.org/Public/Bug/Display.html?id=128618>

=item *

Some regular expression parsing glitches could lead to assertion failures with
regular expressions such as C</(?<=/> and C</(?<!/>.  This has now been fixed.
L<[perl #128170]|https://rt.perl.org/Public/Bug/Display.html?id=128170>

=back

=head1 Errata From Previous Releases

=over 4

=item *

Parsing bad POSIX charclasses no longer leaks memory.  This was fixed in Perl
5.25.2
L<[perl #128313]|https://rt.perl.org/Public/Bug/Display.html?id=128313>

=item *

Fixed issues with recursive regexes.  The behavior was fixed in Perl 5.24.0.
L<[perl #126182]|https://rt.perl.org/Public/Bug/Display.html?id=126182>

=back

=head1 Acknowledgements

Perl 5.25.3 represents approximately 4 weeks of development since Perl 5.25.2
and contains approximately 67,000 lines of changes across 510 files from 25
authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 40,000 lines of changes to 290 .pm, .t, .c and .h files.

Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers.  The following people are known to have contributed
the improvements that became Perl 5.25.3:

Aaron Crane, Ævar Arnfjörð Bjarmason, Alex Vandiver, Aristotle Pagaltzis,
Chad Granum, Chris 'BinGOs' Williams, Chris Lamb, Craig A. Berry, Dan Collins,
David Mitchell, Father Chrysostomos, H.Merijn Brand, Jarkko Hietaniemi, Karl
Williamson, Lukas Mai, Matthew Horsfall, Salvador Fandiño, Sawyer X,
Sébastien Aperghis-Tramoni, Steffen Müller, Steve Hay, Todd Rinaldo, Tony
Cook, Unicode Consortium, Yves Orton.

The list above is almost certainly incomplete as it is automatically generated
from version control history.  In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core.  We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION> for details of how to
report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
